/*
 * Copyright 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//
// Specification of  protocol buffers that are used by services that
// interact with  in the datacenter for sending/receiving ticl-registrar
// protocol messages.

syntax = "proto2";

// Some generic_services option(s) added automatically.
// See:  http://go/proto2-generic-services-default
option cc_generic_services = true;     // auto-added
option java_generic_services = true;   // auto-added
option py_generic_services = true;     // auto-added

package com.google.protos.ipc.invalidation;


import "proto/client_protocol.proto";

message NetworkEndpointId {
  enum NetworkAddress {
    TEST = 1;  // A delivery service for testing

    // Low numbers reserved.
    ANDROID = 113;  // Android delivery service using c2dm / http.
  }
  optional NetworkAddress network_address = 1;
  optional bytes client_address = 2;
}

// Message sent from the client to the server and vice-versa via the
// delivery service.
message AddressedMessage {
  // What kind of encoding is used for network_message
  enum MessageEncoding {
    // Raw proto encoding
    PROTOBUF_BINARY_FORMAT = 1;

    // JSPB-encoding: https://sites.google.com/a/google.com/jspblite/Home
    PROTOBUF_JSON_FORMAT = 2;
  }

  optional MessageEncoding encoding = 1;

  // Authenticated user identifier.
  optional bytes auth_user_id = 2;

  // Network id for the client
  optional NetworkEndpointId client_network_id = 3;

   // ClientToServerMessage or ServerToClientMessage
  optional bytes network_message = 4;

  // (For debugging) Caller's info, e.g., task address
  optional string caller_info = 5;
}

message AddressedMessageResponse {
  optional StatusP status = 1;
}
